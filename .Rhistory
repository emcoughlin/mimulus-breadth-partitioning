r.squaredGLMM(pop.breadth.lmer)
## run model and get summary output ##
pop.breadth.opt.lmer <- lmer(pop.breadth_cs ~ opt.var_cs + (1 | pair), data=var)
hist(var$pop.breadth)
var$pop.breadth_cs <- scale(var$pop.breadth, center=T, scale=T)
hist(var$pop.breadth_cs)
## run model and get summary output ##
pop.breadth.opt.lmer <- lmer(pop.breadth_cs ~ opt.var_cs + (1 | pair), data=var)
summary(pop.breadth.opt.lmer)
## calculate p-value for one tailed test ##
m2.pval <- summary(pop.breadth.opt.lmer)$coefficients[,"Pr(>|t|)"][2]
m2.pval/2
## calculate marginal and conditional r2 ##
r.squaredGLMM(pop.breadth.opt.lmer)
## run model and get summary output ##
pop.breadth.var.lmer <- lmer(pop.breadth_cs ~ breadth.var_cs + (1 | pair), data=var)
summary(pop.breadth.var.lmer)
## calculate p-value for one tailed test ##
m3.pval <- summary(pop.breadth.var.lmer)$coefficients[,"Pr(>|t|)"][2]
m3.pval/2
## calculate marginal and conditional r2 ##
r.squaredGLMM(pop.breadth.var.lmer)
se1 <- 0.3
ggplot(tpc, aes(y=pop.breadth_cs, x=t.breadth2_cs)) +
geom_point(aes(x=t.breadth2_cs, y=pop.breadth_cs, fill=species), shape=21, size=4, alpha=0.8, color="gray25") +
ggtitle("A") + theme_bw()
ggplot(tpc, aes(y=pop.breadth_cs, x=t.breadth2_cs)) +
geom_point(aes(x=t.breadth2_cs, y=pop.breadth_cs, fill=species), shape=21, size=4, alpha=0.8, color="gray25") +
ggtitle("A") + theme_bw() +
xlab(expression(family ~italic(T[breadth]))) + ylab("  ") +
#geom_point(data=var, aes(y=pop.breadth, x=fam.breadth), shape=3, size=4, stroke=1, color="black") +
scale_fill_manual(name="Species", values=c("mediumpurple3","thistle1","goldenrod2","lightgoldenrod1","green4","palegreen1","royalblue3","lightskyblue1","violetred3","pink1"),
breaks=c("par","car","ver","eas", "bic", "fil","flo", "nor","lac", "gut"),
labels=c("M. parishii","M. cardinalis","M. verbanaceous","M. eastwoodiae", "M. bicolor", "M. filicaulis","M. floribundus", "M. norrisii","M. laciniatus", "M. guttatus")) +
theme(legend.position = "bottom", text=element_text(size=23),  legend.text=element_text(size=20, face="italic"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.direction = "vertical") +
guides(fill=guide_legend(override.aes=list(size=5))) + geom_abline(slope=1 , intercept=0, color="gray", size=2)
View(var)
ggplot(tpc, aes(y=pop.breadth_cs, x=t.breadth2_cs)) +
geom_point(aes(x=t.breadth2_cs, y=pop.breadth_cs, fill=species), shape=21, size=4, alpha=0.8, color="gray25") +
ggtitle("A") + theme_bw() +
xlab(expression(family ~italic(T[breadth]))) + ylab("  ") +
#geom_point(data=var, aes(y=pop.breadth, x=fam.breadth), shape=3, size=4, stroke=1, color="black") +
scale_fill_manual(name="Species", values=c("mediumpurple3","thistle1","goldenrod2","lightgoldenrod1","green4","palegreen1","royalblue3","lightskyblue1","violetred3","pink1"),
breaks=c("par","car","ver","eas", "bic", "fil","flo", "nor","lac", "gut"),
labels=c("M. parishii","M. cardinalis","M. verbanaceous","M. eastwoodiae", "M. bicolor", "M. filicaulis","M. floribundus", "M. norrisii","M. laciniatus", "M. guttatus")) +
theme(legend.position = "bottom", text=element_text(size=23),  legend.text=element_text(size=20, face="italic"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.direction = "vertical") +
guides(fill=guide_legend(override.aes=list(size=5))) + geom_abline(slope=1 , intercept=0, color="gray", size=2) +
geom_point(data=var, aes(x=scale(fam.breadth), y=pop.breadth_cs), fill="black", shape=23, size=3)
## run model and get summary output ##
pop.breadth.lmer <- lmer(scale(pop.breadth) ~ scale(t.breadth2) + (1 | pair), data=tpc)
summary(pop.breadth.lmer)
## calculate p-value for one tailed test ##
m1.pval <- summary(pop.breadth.lmer)$coefficients[,"Pr(>|t|)"][2]
m1.pval/2
## calculate marginal and conditional r2 ##
r.squaredGLMM(pop.breadth.lmer)
## run model and get summary output ##
pop.breadth.opt.lmer <- lmer(scale(pop.breadth) ~ scale(opt.var) + (1 | pair), data=var)
summary(pop.breadth.opt.lmer)
## calculate p-value for one tailed test ##
m2.pval <- summary(pop.breadth.opt.lmer)$coefficients[,"Pr(>|t|)"][2]
m2.pval/2
## calculate marginal and conditional r2 ##
r.squaredGLMM(pop.breadth.opt.lmer)
## run model and get summary output ##
pop.breadth.var.lmer <- lmer(scale(pop.breadth) ~ scale(breadth.var) + (1 | pair), data=var)
summary(pop.breadth.var.lmer)
## calculate p-value for one tailed test ##
m3.pval <- summary(pop.breadth.var.lmer)$coefficients[,"Pr(>|t|)"][2]
m3.pval/2
## calculate marginal and conditional r2 ##
r.squaredGLMM(pop.breadth.var.lmer)
h1 <- ggplot(tpc, aes(y=pop.breadth, x=t.breadth2)) +
geom_point(aes(x=t.breadth2, y=pop.breadth, fill=species), shape=21, size=4, alpha=0.8, color="gray25") +
ggtitle("A") + theme_bw() +
xlab(expression(family ~italic(T[breadth]))) + ylab("  ") +
#geom_point(data=var, aes(y=pop.breadth, x=fam.breadth), shape=3, size=4, stroke=1, color="black") +
scale_fill_manual(name="Species", values=c("mediumpurple3","thistle1","goldenrod2","lightgoldenrod1","green4","palegreen1","royalblue3","lightskyblue1","violetred3","pink1"),
breaks=c("par","car","ver","eas", "bic", "fil","flo", "nor","lac", "gut"),
labels=c("M. parishii","M. cardinalis","M. verbanaceous","M. eastwoodiae", "M. bicolor", "M. filicaulis","M. floribundus", "M. norrisii","M. laciniatus", "M. guttatus")) +
theme(legend.position = "bottom", text=element_text(size=23),  legend.text=element_text(size=20, face="italic"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.direction = "vertical") +
guides(fill=guide_legend(override.aes=list(size=5))) + geom_abline(slope=1 , intercept=0, color="gray", size=2) +
geom_point(data=var, aes(x=scale(fam.breadth), y=pop.breadth), fill="black", shape=23, size=3) +
geom_errorbar(data=var, aes(x=fam.breadth, y=pop.breadth, xmin=fam.breadth.cmin, xmax=fam.breadth.cmax, width=se1, alpha=0.75), show.legend=FALSE) +
geom_errorbar(data=var, aes(x=fam.breadth, y=pop.breadth, ymin=pop.breadth.cmin, ymax=pop.breadth.cmax, width=se1, alpha=0.75), show.legend=FALSE) +
geom_line(aes(y = predict(pop.breadth.lmer), color=pair), size=1, show.legend=FALSE) +
scale_color_manual(values=c("mediumpurple4", "darkgoldenrod","darkgreen","royalblue4", "violetred4"),
breaks=c("car-par","ver-eas", "bic-fil", "flo-nor","gut-lac")) + guides(fill=guide_legend(ncol=2))
h1
h1 <- ggplot(tpc, aes(y=pop.breadth, x=t.breadth2)) +
geom_point(aes(x=t.breadth2, y=pop.breadth, fill=species), shape=21, size=4, alpha=0.8, color="gray25") +
ggtitle("A") + theme_bw() +
xlab(expression(family ~italic(T[breadth]))) + ylab("  ") +
#geom_point(data=var, aes(y=pop.breadth, x=fam.breadth), shape=3, size=4, stroke=1, color="black") +
scale_fill_manual(name="Species", values=c("mediumpurple3","thistle1","goldenrod2","lightgoldenrod1","green4","palegreen1","royalblue3","lightskyblue1","violetred3","pink1"),
breaks=c("par","car","ver","eas", "bic", "fil","flo", "nor","lac", "gut"),
labels=c("M. parishii","M. cardinalis","M. verbanaceous","M. eastwoodiae", "M. bicolor", "M. filicaulis","M. floribundus", "M. norrisii","M. laciniatus", "M. guttatus")) +
theme(legend.position = "bottom", text=element_text(size=23),  legend.text=element_text(size=20, face="italic"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.direction = "vertical") +
guides(fill=guide_legend(override.aes=list(size=5))) + geom_abline(slope=1 , intercept=0, color="gray", size=2) +
geom_point(data=var, aes(x=fam.breadth, y=pop.breadth), fill="black", shape=23, size=3) +
geom_errorbar(data=var, aes(x=fam.breadth, y=pop.breadth, xmin=fam.breadth.cmin, xmax=fam.breadth.cmax, width=se1, alpha=0.75), show.legend=FALSE) +
geom_errorbar(data=var, aes(x=fam.breadth, y=pop.breadth, ymin=pop.breadth.cmin, ymax=pop.breadth.cmax, width=se1, alpha=0.75), show.legend=FALSE) +
geom_line(aes(y = predict(pop.breadth.lmer), color=pair), size=1, show.legend=FALSE) +
scale_color_manual(values=c("mediumpurple4", "darkgoldenrod","darkgreen","royalblue4", "violetred4"),
breaks=c("car-par","ver-eas", "bic-fil", "flo-nor","gut-lac")) + guides(fill=guide_legend(ncol=2))
h1
ggplot(tpc, aes(y=pop.breadth, x=t.breadth2)) +
geom_point(aes(x=t.breadth2, y=pop.breadth, fill=species), shape=21, size=4, alpha=0.8, color="gray25") +
ggtitle("A") + theme_bw() +
xlab(expression(family ~italic(T[breadth]))) + ylab("  ")
ggplot(tpc, aes(y=pop.breadth, x=t.breadth2)) +
geom_point(aes(x=t.breadth2, y=pop.breadth, fill=species), shape=21, size=4, alpha=0.8, color="gray25") +
ggtitle("A") + theme_bw() +
xlab(expression(family ~italic(T[breadth]))) + ylab("  ") +
#geom_point(data=var, aes(y=pop.breadth, x=fam.breadth), shape=3, size=4, stroke=1, color="black") +
scale_fill_manual(name="Species", values=c("mediumpurple3","thistle1","goldenrod2","lightgoldenrod1","green4","palegreen1","royalblue3","lightskyblue1","violetred3","pink1"),
breaks=c("par","car","ver","eas", "bic", "fil","flo", "nor","lac", "gut"),
labels=c("M. parishii","M. cardinalis","M. verbanaceous","M. eastwoodiae", "M. bicolor", "M. filicaulis","M. floribundus", "M. norrisii","M. laciniatus", "M. guttatus")) +
theme(legend.position = "bottom", text=element_text(size=23),  legend.text=element_text(size=20, face="italic"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.direction = "vertical") +
guides(fill=guide_legend(override.aes=list(size=5))) + geom_abline(slope=1 , intercept=0, color="gray", size=2)
ggplot(tpc, aes(y=pop.breadth, x=t.breadth2)) +
geom_point(aes(x=t.breadth2, y=pop.breadth, fill=species), shape=21, size=4, alpha=0.8, color="gray25") +
ggtitle("A") + theme_bw() +
xlab(expression(family ~italic(T[breadth]))) + ylab("  ") +
#geom_point(data=var, aes(y=pop.breadth, x=fam.breadth), shape=3, size=4, stroke=1, color="black") +
scale_fill_manual(name="Species", values=c("mediumpurple3","thistle1","goldenrod2","lightgoldenrod1","green4","palegreen1","royalblue3","lightskyblue1","violetred3","pink1"),
breaks=c("par","car","ver","eas", "bic", "fil","flo", "nor","lac", "gut"),
labels=c("M. parishii","M. cardinalis","M. verbanaceous","M. eastwoodiae", "M. bicolor", "M. filicaulis","M. floribundus", "M. norrisii","M. laciniatus", "M. guttatus")) +
theme(legend.position = "bottom", text=element_text(size=23),  legend.text=element_text(size=20, face="italic"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.direction = "vertical") +
guides(fill=guide_legend(override.aes=list(size=5))) + geom_abline(slope=1 , intercept=0, color="gray", size=2) +
geom_point(data=var, aes(x=fam.breadth, y=pop.breadth), fill="black", shape=23, size=3)
ggplot(tpc, aes(y=pop.breadth, x=t.breadth2)) +
geom_point(aes(x=t.breadth2, y=pop.breadth, fill=species), shape=21, size=4, alpha=0.8, color="gray25") +
ggtitle("A") + theme_bw() +
xlab(expression(family ~italic(T[breadth]))) + ylab("  ") +
#geom_point(data=var, aes(y=pop.breadth, x=fam.breadth), shape=3, size=4, stroke=1, color="black") +
scale_fill_manual(name="Species", values=c("mediumpurple3","thistle1","goldenrod2","lightgoldenrod1","green4","palegreen1","royalblue3","lightskyblue1","violetred3","pink1"),
breaks=c("par","car","ver","eas", "bic", "fil","flo", "nor","lac", "gut"),
labels=c("M. parishii","M. cardinalis","M. verbanaceous","M. eastwoodiae", "M. bicolor", "M. filicaulis","M. floribundus", "M. norrisii","M. laciniatus", "M. guttatus")) +
theme(legend.position = "bottom", text=element_text(size=23),  legend.text=element_text(size=20, face="italic"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.direction = "vertical") +
guides(fill=guide_legend(override.aes=list(size=5))) + geom_abline(slope=1 , intercept=0, color="gray", size=2) +
geom_point(data=var, aes(x=fam.breadth, y=pop.breadth), fill="black", shape=23, size=3) +
geom_errorbar(data=var, aes(x=fam.breadth, y=pop.breadth, xmin=fam.breadth.cmin, xmax=fam.breadth.cmax, width=se1, alpha=0.75), show.legend=FALSE) +
geom_errorbar(data=var, aes(x=fam.breadth, y=pop.breadth, ymin=pop.breadth.cmin, ymax=pop.breadth.cmax, width=se1, alpha=0.75), show.legend=FALSE) +
geom_line(aes(y = predict(pop.breadth.lmer), color=pair), size=1, show.legend=FALSE)
View(var)
## load packages ##
library("lme4")
library("car")
library("lsmeans")
library("tidyverse")
library("gridExtra")
library("lsmeans")
library("lmerTest")
library("MuMIn")
library("lattice")
## read data ##
tpc <- read.csv("Analysis-output/family-mean-estimates-sxp-af.csv")
var <- read.csv("Processed-data/breadth-and-var-by-species.csv")
# note: "breadth-var-by-species.csv" was created manually in excel
## calculate breadth ##
tpc$t.breadth2 <- tpc$t.max2 - tpc$t.min2
## join data ##
var.data <- select(var, species, pop.breadth)
tpc <- left_join(tpc, var.data, by="species")
#############################################
# population breadth ~ family level breadth #
#############################################
## run model and get summary output ##
pop.breadth.lmer <- lmer(scale(pop.breadth) ~ scale(t.breadth2) + (1 | pair), data=tpc)
summary(pop.breadth.lmer)
# Linear mixed model fit by REML. t-tests use Satterthwaite's method ['lmerModLmerTest']
# Formula: scale(pop.breadth) ~ scale(t.breadth2) + (1 | pair)
#    Data: tpc
#
# REML criterion at convergence: 51
#
# Scaled residuals:
#      Min       1Q   Median       3Q      Max
# -3.02492 -0.25744  0.00588  0.44081  1.84974
#
# Random effects:
#  Groups   Name        Variance Std.Dev.
#  pair     (Intercept) 1.30640  1.1430
#  Residual             0.06244  0.2499
# Number of obs: 235, groups:  pair, 5
#
# Fixed effects:
#                    Estimate Std. Error        df t value Pr(>|t|)
# (Intercept)        -0.36073    0.51174   3.95098  -0.705   0.5202
# scale(t.breadth2)   0.08274    0.04476 231.72130   1.849   0.0658 .
# ---
# Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# Correlation of Fixed Effects:
#             (Intr)
# scl(t.brd2) 0.033
## calculate p-value for one tailed test ##
m1.pval <- summary(pop.breadth.lmer)$coefficients[,"Pr(>|t|)"][2]
m1.pval/2
# 0.03289543
## calculate marginal and conditional r2 ##
r.squaredGLMM(pop.breadth.lmer)
#           R2m       R2c
# [1,] 0.004975914 0.9546151
#############################################
## population breadth ~ variation in T-opt ##
#############################################
## run model and get summary output ##
pop.breadth.opt.lmer <- lmer(scale(pop.breadth) ~ scale(opt.var) + (1 | pair), data=var)
summary(pop.breadth.opt.lmer)
# Linear mixed model fit by REML. t-tests use Satterthwaite's method ['lmerModLmerTest']
# Formula: scale(pop.breadth) ~ scale(opt.var) + (1 | pair)
#    Data: var
#
# REML criterion at convergence: 17.9
#
# Scaled residuals:
#      Min       1Q   Median       3Q      Max
# -0.84821 -0.62645 -0.02471  0.51413  1.12570
#
# Random effects:
#  Groups   Name        Variance Std.Dev.
#  pair     (Intercept) 0.82396  0.9077
#  Residual             0.06734  0.2595
# Number of obs: 10, groups:  pair, 5
#
# Fixed effects:
#                 Estimate Std. Error        df t value Pr(>|t|)
# (Intercept)    8.846e-16  4.142e-01 3.954e+00   0.000     1.00
# scale(opt.var) 2.908e-01  1.218e-01 4.372e+00   2.386     0.07 .
# ---
# Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# Correlation of Fixed Effects:
#             (Intr)
# scal(pt.vr) 0.000
## calculate p-value for one tailed test ##
m2.pval <- summary(pop.breadth.opt.lmer)$coefficients[,"Pr(>|t|)"][2]
m2.pval/2
# 0.03500124
## calculate marginal and conditional r2 ##
r.squaredGLMM(pop.breadth.opt.lmer)
# R2m      R2c
# [1,] 0.08662951 0.9309972
#################################################
## population breadth ~ variation in T-breadth ##
#################################################
## run model and get summary output ##
pop.breadth.var.lmer <- lmer(scale(pop.breadth) ~ scale(breadth.var) + (1 | pair), data=var)
summary(pop.breadth.var.lmer)
# Linear mixed model fit by REML. t-tests use Satterthwaite's method ['lmerModLmerTest']
# Formula: scale(pop.breadth) ~ scale(breadth.var) + (1 | pair)
#    Data: var
#
# REML criterion at convergence: 21.3
#
# Scaled residuals:
#      Min       1Q   Median       3Q      Max
# -1.21460 -0.44997  0.06626  0.46405  1.08802
#
# Random effects:
#  Groups   Name        Variance Std.Dev.
#  pair     (Intercept) 0.8296   0.9108
#  Residual             0.1601   0.4001
# Number of obs: 10, groups:  pair, 5
#
# Fixed effects:
#                     Estimate Std. Error        df t value Pr(>|t|)
# (Intercept)        2.750e-16  4.265e-01 3.033e+00   0.000    1.000
# scale(breadth.var) 1.196e-01  2.114e-01 4.738e+00   0.566    0.597
#
# Correlation of Fixed Effects:
#             (Intr)
# scl(brdth.) 0.000
## calculate p-value for one tailed test ##
m3.pval <- summary(pop.breadth.var.lmer)$coefficients[,"Pr(>|t|)"][2]
m3.pval/2
# 0.2985703
## calculate marginal and conditional r2 ##
r.squaredGLMM(pop.breadth.var.lmer)
# R2m       R2c
# [1,] 0.01425338 0.8405845
############################################################
## Figure 3: Results that correspond to hypotheses/models ##
############################################################
se1 <- 0.3
tpc
h1 <- ggplot(tpc, aes(y=pop.breadth, x=t.breadth2)) +
geom_point(aes(x=t.breadth2, y=pop.breadth, fill=species), shape=21, size=4, alpha=0.8, color="gray25") +
ggtitle("A") + theme_bw() +
xlab(expression(family ~italic(T[breadth]))) + ylab("  ") +
#geom_point(data=var, aes(y=pop.breadth, x=fam.breadth), shape=3, size=4, stroke=1, color="black") +
scale_fill_manual(name="Species", values=c("mediumpurple3","thistle1","goldenrod2","lightgoldenrod1","green4","palegreen1","royalblue3","lightskyblue1","violetred3","pink1"),
breaks=c("par","car","ver","eas", "bic", "fil","flo", "nor","lac", "gut"),
labels=c("M. parishii","M. cardinalis","M. verbanaceous","M. eastwoodiae", "M. bicolor", "M. filicaulis","M. floribundus", "M. norrisii","M. laciniatus", "M. guttatus")) +
theme(legend.position = "bottom", text=element_text(size=23),  legend.text=element_text(size=20, face="italic"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.direction = "vertical") +
guides(fill=guide_legend(override.aes=list(size=5))) + geom_abline(slope=1 , intercept=0, color="gray", size=2) +
geom_point(data=var, aes(x=fam.breadth, y=pop.breadth), fill="black", shape=23, size=3) +
geom_errorbar(data=var, aes(x=fam.breadth, y=pop.breadth, xmin=fam.breadth.cmin, xmax=fam.breadth.cmax, width=se1, alpha=0.75), show.legend=FALSE) +
geom_errorbar(data=var, aes(x=fam.breadth, y=pop.breadth, ymin=pop.breadth.cmin, ymax=pop.breadth.cmax, width=se1, alpha=0.75), show.legend=FALSE) +
geom_line(aes(y = predict(pop.breadth.lmer), color=pair), size=1, show.legend=FALSE) +
scale_color_manual(values=c("mediumpurple4", "darkgoldenrod","darkgreen","royalblue4", "violetred4"),
breaks=c("car-par","ver-eas", "bic-fil", "flo-nor","gut-lac")) + guides(fill=guide_legend(ncol=2))
h1
se1 <- 0.3
h1 <- ggplot(tpc, aes(y=pop.breadth, x=t.breadth2)) +
geom_point(aes(x=t.breadth2, y=pop.breadth, fill=species), shape=21, size=4, alpha=0.8, color="gray25") +
ggtitle("A") + theme_bw() +
xlab(expression(family ~italic(T[breadth]))) + ylab("  ") +
#geom_point(data=var, aes(y=pop.breadth, x=fam.breadth), shape=3, size=4, stroke=1, color="black") +
scale_fill_manual(name="Species", values=c("mediumpurple3","thistle1","goldenrod2","lightgoldenrod1","green4","palegreen1","royalblue3","lightskyblue1","violetred3","pink1"),
breaks=c("par","car","ver","eas", "bic", "fil","flo", "nor","lac", "gut"),
labels=c("M. parishii","M. cardinalis","M. verbanaceous","M. eastwoodiae", "M. bicolor", "M. filicaulis","M. floribundus", "M. norrisii","M. laciniatus", "M. guttatus")) +
theme(legend.position = "bottom", text=element_text(size=23),  legend.text=element_text(size=20, face="italic"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.direction = "vertical") +
guides(fill=guide_legend(override.aes=list(size=5))) + geom_abline(slope=1 , intercept=0, color="gray", size=2) +
geom_point(data=var, aes(x=fam.breadth, y=pop.breadth), fill="black", shape=23, size=3) +
geom_errorbar(data=var, aes(x=fam.breadth, y=pop.breadth, xmin=fam.breadth.cmin, xmax=fam.breadth.cmax, width=se1, alpha=0.75), show.legend=FALSE) +
geom_errorbar(data=var, aes(x=fam.breadth, y=pop.breadth, ymin=pop.breadth.cmin, ymax=pop.breadth.cmax, width=se1, alpha=0.75), show.legend=FALSE) +
geom_line(aes(y = predict(pop.breadth.lmer), color=pair), size=1, show.legend=FALSE) +
scale_color_manual(values=c("mediumpurple4", "darkgoldenrod","darkgreen","royalblue4", "violetred4"),
breaks=c("car-par","ver-eas", "bic-fil", "flo-nor","gut-lac")) + guides(fill=guide_legend(ncol=2))
h1
## run model and get summary output ##
pop.breadth.lmer <- lmer((pop.breadth) ~ (t.breadth2) + (1 | pair), data=tpc)
## run model and get summary output ##
pop.breadth.opt.lmer <- lmer((pop.breadth) ~ (opt.var) + (1 | pair), data=var)
## run model and get summary output ##
pop.breadth.var.lmer <- lmer((pop.breadth) ~ (breadth.var) + (1 | pair), data=var)
h1 <- ggplot(tpc, aes(y=pop.breadth, x=t.breadth2)) +
geom_point(aes(x=t.breadth2, y=pop.breadth, fill=species), shape=21, size=4, alpha=0.8, color="gray25") +
ggtitle("A") + theme_bw() +
xlab(expression(family ~italic(T[breadth]))) + ylab("  ") +
#geom_point(data=var, aes(y=pop.breadth, x=fam.breadth), shape=3, size=4, stroke=1, color="black") +
scale_fill_manual(name="Species", values=c("mediumpurple3","thistle1","goldenrod2","lightgoldenrod1","green4","palegreen1","royalblue3","lightskyblue1","violetred3","pink1"),
breaks=c("par","car","ver","eas", "bic", "fil","flo", "nor","lac", "gut"),
labels=c("M. parishii","M. cardinalis","M. verbanaceous","M. eastwoodiae", "M. bicolor", "M. filicaulis","M. floribundus", "M. norrisii","M. laciniatus", "M. guttatus")) +
theme(legend.position = "bottom", text=element_text(size=23),  legend.text=element_text(size=20, face="italic"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.direction = "vertical") +
guides(fill=guide_legend(override.aes=list(size=5))) + geom_abline(slope=1 , intercept=0, color="gray", size=2) +
geom_point(data=var, aes(x=fam.breadth, y=pop.breadth), fill="black", shape=23, size=3) +
geom_errorbar(data=var, aes(x=fam.breadth, y=pop.breadth, xmin=fam.breadth.cmin, xmax=fam.breadth.cmax, width=se1, alpha=0.75), show.legend=FALSE) +
geom_errorbar(data=var, aes(x=fam.breadth, y=pop.breadth, ymin=pop.breadth.cmin, ymax=pop.breadth.cmax, width=se1, alpha=0.75), show.legend=FALSE) +
geom_line(aes(y = predict(pop.breadth.lmer), color=pair), size=1, show.legend=FALSE) +
scale_color_manual(values=c("mediumpurple4", "darkgoldenrod","darkgreen","royalblue4", "violetred4"),
breaks=c("car-par","ver-eas", "bic-fil", "flo-nor","gut-lac")) + guides(fill=guide_legend(ncol=2))
h1
h2 <- ggplot(var, aes(y=pop.breadth, x=opt.var)) +
theme_bw() +
theme(legend.position = "none", text=element_text(size=23), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
xlab(expression(family ~italic(T[opt])~ variance)) +
ylab(" ") + ggtitle("B") +
scale_fill_manual(name="Species", values=c("mediumpurple3","thistle1","goldenrod2","lightgoldenrod1","green4","palegreen1","royalblue3","lightskyblue1","violetred3","pink1"),
breaks=c("par","car","ver","eas", "bic", "fil","flo", "nor","lac", "gut"),
labels=c("M. parishii","M. cardinalis","M. verbanaceous","M. eastwoodiae", "M. bicolor", "M. filicaulis","M. floribundus", "M. norrisii","M. laciniatus", "M. guttatus")) +
geom_errorbar(data=var, aes(x=opt.var, y=pop.breadth, xmin=opt.var.cmin, xmax=opt.var.cmax, width=se1, alpha=0.75)) +
geom_errorbar(data=var, aes(x=opt.var, y=pop.breadth, ymin=pop.breadth.cmin, ymax=pop.breadth.cmax, width=se1, alpha=0.75)) +
geom_point(aes(x=opt.var, y=pop.breadth, fill=species), shape=21, size=5, stroke=1, color="gray25") +
geom_line(aes(y = predict(pop.breadth.opt.lmer), color=pair), size=1) +
scale_color_manual(values=c("mediumpurple4", "darkgoldenrod","darkgreen","royalblue4", "violetred4"),
breaks=c("car-par","ver-eas", "bic-fil", "flo-nor","gut-lac"))
h3_lines = data.frame(x = c(min(var$breadth.var), max(var$breadth.var)),
y = c(b3 + m3 * min(var$breadth.var), b3 + m3 * max(var$breadth.var)))
h2
h3_lines = data.frame(x = c(min(var$breadth.var), max(var$breadth.var)),
y = c(b3 + m3 * min(var$breadth.var), b3 + m3 * max(var$breadth.var)))
summary(pop.breadth.var.lmer)$coefficients
summary(pop.breadth.var.lmer)$coefficients$Estimate
b3 <- summary(pop.breadth.var.lmer)$coefficients[,"Estimate"][1]
m3 <- summary(pop.breadth.var.lmer)$coefficients[,"Estimate"][2]
h3_lines = data.frame(x = c(min(var$breadth.var), max(var$breadth.var)),
y = c(b3 + m3 * min(var$breadth.var), b3 + m3 * max(var$breadth.var)))
h3 <- ggplot(var, aes(x=breadth.var, y=pop.breadth)) + theme_bw() +
theme(text=element_text(size=23), panel.grid.major = element_blank(), panel.grid.minor = element_blank()) +
xlab(expression(family ~italic(T[breadth])~ variance)) +
ylab(" ") + ggtitle("C") +
scale_fill_manual(name="Species", values=c("mediumpurple3","thistle1","goldenrod2","lightgoldenrod1","green4","palegreen1","royalblue3","lightskyblue1","violetred3","pink1"),
breaks=c("par","car","ver","eas", "bic", "fil","flo", "nor","lac", "gut"),
labels=c("M. parishii","M. cardinalis","M. verbanaceous","M. eastwoodiae", "M. bicolor", "M. filicaulis","M. floribundus", "M. norrisii","M. laciniatus", "M. guttatus")) +
geom_errorbar(data=var, aes(x=breadth.var, y=pop.breadth, xmin=breadth.var.cmin, xmax=breadth.var.cmax, width=se1, alpha=0.75)) +
geom_errorbar(data=var, aes(x=breadth.var, y=pop.breadth, ymin=pop.breadth.cmin, ymax=pop.breadth.cmax, width=se1, alpha=0.75)) +
geom_point(aes(x=breadth.var, y=pop.breadth, fill=species), shape=21, size=5, stroke=1, color="gray25") +
geom_line(aes(y = predict(pop.breadth.var.lmer), color=pair), size=1, linetype="dashed") +
scale_color_manual(values=c("mediumpurple4", "darkgoldenrod","darkgreen","royalblue4", "violetred4"),
breaks=c("car-par","ver-eas", "bic-fil", "flo-nor","gut-lac")) + xlim(NA, 17)
h3
## extract legend ##
g_legend<-function(a.gplot){
tmp <- ggplot_gtable(ggplot_build(a.gplot))
leg <- which(sapply(tmp$grobs, function(x) x$name) == "guide-box")
legend <- tmp$grobs[[leg]]
return(legend)}
mylegend<-g_legend(h1)
text = expression(paste(population ~italic(T[breadth])))
lab <- ggplot() + annotate("text", x = 4, y = 25, size=10, angle=90, label=text) + theme_void()
text = ""
nolab <- ggplot() + annotate("text", x = 4, y = 25, size=23, label = text) +
theme_void()
grid.arrange(arrangeGrob(nolab, h1+theme(legend.position='hidden'), lab, h2+theme(legend.position='hidden'),
nolab, h3+theme(legend.position='hidden'), nolab, mylegend, ncol=2, nrow=4,
heights=c(5.5,5.5,5.5,2), widths=c(0.4,6), padding = 0.1))
m2.pval
m2.pval
??wp.t
install.packages("WebPower")
library(WebPower)
??wp.t
# POWER
ptest1 <- wp.t(n1=seq(2,200,1), d = 0.08274, alpha = 0.05, type="paired", alternative="greater")
ptest1
View(ptest1)
ptest1$n[min(which(ptest1$power>0.8))]
# POWER
ptest1 <- wp.t(n1=seq(2,200,1), d = 0.08274, alpha = 0.05, type="paired", alternative="greater")
ptest1$n
ptest1$power
# POWER
ptest1 <- wp.t(n1=seq(2,2000,1), d = 0.08274, alpha = 0.05, type="paired", alternative="greater")
ptest1$n[min(which(ptest1$power>0.8))]
summary(pop.breadth.lmer)$coefficients
# POWER
install.packages("powerMediation")
power.SLR.rho(n=100, rho2=0.033, alpha = 0.05, verbose = TRUE)
powerMediation::power.SLR.rho(n=100, rho2=0.033, alpha = 0.05, verbose = TRUE)
powerMediation::power.SLR.rho(n=5, rho2=0.033, alpha = 0.05, verbose = TRUE)
powerMediation::power.SLR.rho(n=seq(2,2000,1), rho2=0.033, alpha = 0.05, verbose = TRUE)
powerMediation::power.SLR(n=5, lambda.a=0.08274, sigma.x=1, sigma.y=1,
alpha = 0.05, verbose = TRUE))
powerMediation::power.SLR(n=5, lambda.a=0.08274, sigma.x=1, sigma.y=1,
alpha = 0.05, verbose = TRUE)
ptest <- data.frame(n=seq(2, 100, by=1),
power=rep(NA, 99))
ptest
for(i in 1:99){
ptest$power[i] <- powerMediation::power.SLR(n=ptest$n[i], lambda.a=0.08274, sigma.x=1, sigma.y=1, alpha = 0.05, verbose = TRUE)
}
ptest$n
ptest$power[1] <- powerMediation::power.SLR(n=ptest$n[1], lambda.a=0.08274, sigma.x=1, sigma.y=1, alpha = 0.05, verbose = TRUE)
ptest <- data.frame(n=seq(3, 103, by=1),
power=rep(NA, 100))
ptest$power[1] <- powerMediation::power.SLR(n=ptest$n[1], lambda.a=0.08274, sigma.x=1, sigma.y=1, alpha = 0.05, verbose = TRUE)
ptest$n
ptest <- data.frame(n=seq(3, 103, by=1),
power=rep(NA, 100))
ptest <- data.frame(n=seq(3, 102, by=1),
power=rep(NA, 100))
for(i in 1:100){
ptest$power[1] <- powerMediation::power.SLR(n=ptest$n[1], lambda.a=0.08274, sigma.x=1, sigma.y=1, alpha = 0.05, verbose = TRUE)
}
ptest$power[i] <- powerMediation::power.SLR(n=ptest$n[i], lambda.a=0.08274, sigma.x=1, sigma.y=1, alpha = 0.05, verbose = TRUE)
for(i in 1:100){
ptest$power[i] <- powerMediation::power.SLR(n=ptest$n[i], lambda.a=0.08274, sigma.x=1, sigma.y=1, alpha = 0.05, verbose = TRUE)
}
ptest
ptest <- data.frame(n=seq(3, 1002, by=1),
power=rep(NA, 1000))
for(i in 1:1000){
ptest$power[i] <- powerMediation::power.SLR(n=ptest$n[i], lambda.a=0.08274, sigma.x=1, sigma.y=1, alpha = 0.05, verbose = TRUE)
}
ptest1 <- data.frame(n=seq(3, 1002, by=1),
power=rep(NA, 1000))
for(i in 1:1000){
ptest1$power[i] <- powerMediation::power.SLR(n=ptest1$n[i], lambda.a=0.08274, sigma.x=1, sigma.y=1, alpha = 0.05, verbose = TRUE)
}
ptest1$n[min(which(ptest1$power>0.8))]
View(ptest1)
ptest1$n[min(which(ptest1$power>0.5))]
ptest1 <- data.frame(n=seq(3, 2002, by=1),
power=rep(NA, 2000))
for(i in 1:2000){
ptest1$power[i] <- powerMediation::power.SLR(n=ptest1$n[i], lambda.a=0.08274, sigma.x=1, sigma.y=1, alpha = 0.05, verbose = TRUE)
}
ptest1$n[min(which(ptest1$power>0.8))]
# n
powerMediation::ss.SLR(power=0.8,
lambda.a=0.08274,
sigma.x=1,
sigma.y=1,
alpha = 0.05,
verbose = TRUE)
ss1 <- powerMediation::ss.SLR(power=0.8,
lambda.a=0.08274,
sigma.x=1,
sigma.y=1,
alpha = 0.05,
verbose = TRUE)
ss1
ss1$n
ss2 <- powerMediation::ss.SLR(power=0.8,
lambda.a=2.908e-01,
sigma.x=1,
sigma.y=1,
alpha = 0.05,
verbose = TRUE)
ss1$n
ss2$n
ss3 <- powerMediation::ss.SLR(power=0.8,
lambda.a=1.196e-01,
sigma.x=1,
sigma.y=1,
alpha = 0.05,
verbose = TRUE)
ss3$n
