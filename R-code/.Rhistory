## load packages ##
library("lme4")
library("car")
library("lsmeans")
library("tidyverse")
library("gridExtra")
## read data ##
tpc <- read.csv("/Volumes/GoogleDrive/My Drive/Sheth_Lab/Projects/Mimulus-tolerance-project/Mimulus-tolerance-project/Analysis-output/family-mean-estimates-sxp-af.csv")
## calculate breadth ##
tpc$t.breadth2 <- tpc$t.max2 - tpc$t.min2
### temperature ###
breadth_t1 <- lmer(t.breadth2 ~ range + (1 | pair / species), data=tpc)
breadth_t2 <- lm(t.breadth2 ~ range + pair, data=tpc)
breadth_t3 <- lm(t.breadth2 ~ range*pair, data=tpc)
AIC(breadth_t1) # 954
AIC(breadth_t2) # 957
AIC(breadth_t3) # 918
Anova(breadth_t3)
# plot residuals #
tpc_res = resid(breadth_t3)
hist(tpc_res, breaks=20)
plot(breadth_t3)
# add range size data #
tpc_mean <- left_join(tpc_mean, range, by="species")
species <- c('car','ver','flo','bic','gut','par','eas','nor','fil','lac')
range <- c('widespread','widespread','widespread','widespread','widespread','restricted','restricted','restricted','restricted','restricted')
pair <- c('1','2','3','4','5','1','2','3','4','5')
range <- data.frame(species, range, pair)
tpc_var <- left_join(tpc_var, range, by="species")
tpc_mean <- left_join(tpc_mean, range, by="species")
# calculate var for all parameters by species #
tpc_var <- tpc %>% group_by(species) %>% summarise_all(funs(var))
# calculate means for all parameters by species #
tpc_mean <- tpc %>% group_by(species) %>% summarise_all(funs(mean))
species <- c('car','ver','flo','bic','gut','par','eas','nor','fil','lac')
range <- c('widespread','widespread','widespread','widespread','widespread','restricted','restricted','restricted','restricted','restricted')
pair <- c('1','2','3','4','5','1','2','3','4','5')
range <- data.frame(species, range, pair)
tpc_var <- left_join(tpc_var, range, by="species")
tpc_mean <- left_join(tpc_mean, range, by="species")
View(tpc_mean)
t.breadth.ttest2 <- t.test(tpc_mean$t.breadth2~tpc_mean$range.y, paired=TRUE)
t.breadth.ttest2
View(t.breadth.ttest2)
View(tpc_mean)
View(tpc_mean)
install.packages(performr)
#load performr
devtools::install_github("silastittes/performr", local = FALSE, ref="zin", force=FALSE)
library(devtools)
install.packages(devtools)
install.packages("devtools")
library(devtools)
install.packages("devtools")
yes
install.packages("devtools")
library(devtools)
install.packages(devtools)
install.packages("devtools")
library(devtools)
uninstall.packages("openssl")
install.packages("devtools")
remove.packages("openssl")
install.packages("devtools")
